/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KafkaTopicListEmbeddedResources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KafkaTopicListEmbeddedResources{}

// KafkaTopicListEmbeddedResources struct for KafkaTopicListEmbeddedResources
type KafkaTopicListEmbeddedResources struct {
	KafkaClusters *KafkaClusterListApiResource `json:"kafkaClusters,omitempty"`
}

// NewKafkaTopicListEmbeddedResources instantiates a new KafkaTopicListEmbeddedResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKafkaTopicListEmbeddedResources() *KafkaTopicListEmbeddedResources {
	this := KafkaTopicListEmbeddedResources{}
	return &this
}

// NewKafkaTopicListEmbeddedResourcesWithDefaults instantiates a new KafkaTopicListEmbeddedResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKafkaTopicListEmbeddedResourcesWithDefaults() *KafkaTopicListEmbeddedResources {
	this := KafkaTopicListEmbeddedResources{}
	return &this
}

// GetKafkaClusters returns the KafkaClusters field value if set, zero value otherwise.
func (o *KafkaTopicListEmbeddedResources) GetKafkaClusters() KafkaClusterListApiResource {
	if o == nil || IsNil(o.KafkaClusters) {
		var ret KafkaClusterListApiResource
		return ret
	}
	return *o.KafkaClusters
}

// GetKafkaClustersOk returns a tuple with the KafkaClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicListEmbeddedResources) GetKafkaClustersOk() (*KafkaClusterListApiResource, bool) {
	if o == nil || IsNil(o.KafkaClusters) {
		return nil, false
	}
	return o.KafkaClusters, true
}

// HasKafkaClusters returns a boolean if a field has been set.
func (o *KafkaTopicListEmbeddedResources) HasKafkaClusters() bool {
	if o != nil && !IsNil(o.KafkaClusters) {
		return true
	}

	return false
}

// SetKafkaClusters gets a reference to the given KafkaClusterListApiResource and assigns it to the KafkaClusters field.
func (o *KafkaTopicListEmbeddedResources) SetKafkaClusters(v KafkaClusterListApiResource) {
	o.KafkaClusters = &v
}

func (o KafkaTopicListEmbeddedResources) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KafkaTopicListEmbeddedResources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KafkaClusters) {
		toSerialize["kafkaClusters"] = o.KafkaClusters
	}
	return toSerialize, nil
}

type NullableKafkaTopicListEmbeddedResources struct {
	value *KafkaTopicListEmbeddedResources
	isSet bool
}

func (v NullableKafkaTopicListEmbeddedResources) Get() *KafkaTopicListEmbeddedResources {
	return v.value
}

func (v *NullableKafkaTopicListEmbeddedResources) Set(val *KafkaTopicListEmbeddedResources) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaTopicListEmbeddedResources) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaTopicListEmbeddedResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaTopicListEmbeddedResources(val *KafkaTopicListEmbeddedResources) *NullableKafkaTopicListEmbeddedResources {
	return &NullableKafkaTopicListEmbeddedResources{value: val, isSet: true}
}

func (v NullableKafkaTopicListEmbeddedResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaTopicListEmbeddedResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


