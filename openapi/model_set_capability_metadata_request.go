/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetCapabilityMetadataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetCapabilityMetadataRequest{}

// SetCapabilityMetadataRequest struct for SetCapabilityMetadataRequest
type SetCapabilityMetadataRequest struct {
	JsonMetadata map[string]JsonNode `json:"jsonMetadata"`
}

type _SetCapabilityMetadataRequest SetCapabilityMetadataRequest

// NewSetCapabilityMetadataRequest instantiates a new SetCapabilityMetadataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetCapabilityMetadataRequest(jsonMetadata map[string]JsonNode) *SetCapabilityMetadataRequest {
	this := SetCapabilityMetadataRequest{}
	this.JsonMetadata = jsonMetadata
	return &this
}

// NewSetCapabilityMetadataRequestWithDefaults instantiates a new SetCapabilityMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetCapabilityMetadataRequestWithDefaults() *SetCapabilityMetadataRequest {
	this := SetCapabilityMetadataRequest{}
	return &this
}

// GetJsonMetadata returns the JsonMetadata field value
func (o *SetCapabilityMetadataRequest) GetJsonMetadata() map[string]JsonNode {
	if o == nil {
		var ret map[string]JsonNode
		return ret
	}

	return o.JsonMetadata
}

// GetJsonMetadataOk returns a tuple with the JsonMetadata field value
// and a boolean to check if the value has been set.
func (o *SetCapabilityMetadataRequest) GetJsonMetadataOk() (*map[string]JsonNode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsonMetadata, true
}

// SetJsonMetadata sets field value
func (o *SetCapabilityMetadataRequest) SetJsonMetadata(v map[string]JsonNode) {
	o.JsonMetadata = v
}

func (o SetCapabilityMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetCapabilityMetadataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jsonMetadata"] = o.JsonMetadata
	return toSerialize, nil
}

func (o *SetCapabilityMetadataRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jsonMetadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetCapabilityMetadataRequest := _SetCapabilityMetadataRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetCapabilityMetadataRequest)

	if err != nil {
		return err
	}

	*o = SetCapabilityMetadataRequest(varSetCapabilityMetadataRequest)

	return err
}

type NullableSetCapabilityMetadataRequest struct {
	value *SetCapabilityMetadataRequest
	isSet bool
}

func (v NullableSetCapabilityMetadataRequest) Get() *SetCapabilityMetadataRequest {
	return v.value
}

func (v *NullableSetCapabilityMetadataRequest) Set(val *SetCapabilityMetadataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetCapabilityMetadataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetCapabilityMetadataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetCapabilityMetadataRequest(val *SetCapabilityMetadataRequest) *NullableSetCapabilityMetadataRequest {
	return &NullableSetCapabilityMetadataRequest{value: val, isSet: true}
}

func (v NullableSetCapabilityMetadataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetCapabilityMetadataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


