/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsAccountApiResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsAccountApiResource{}

// AwsAccountApiResource struct for AwsAccountApiResource
type AwsAccountApiResource struct {
	Id NullableString `json:"id,omitempty"`
	AccountId NullableString `json:"accountId,omitempty"`
	RoleEmail NullableString `json:"roleEmail,omitempty"`
	Namespace NullableString `json:"namespace,omitempty"`
	Status NullableString `json:"status,omitempty"`
	Links *AwsAccountLinks `json:"_links,omitempty"`
}

// NewAwsAccountApiResource instantiates a new AwsAccountApiResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsAccountApiResource() *AwsAccountApiResource {
	this := AwsAccountApiResource{}
	return &this
}

// NewAwsAccountApiResourceWithDefaults instantiates a new AwsAccountApiResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsAccountApiResourceWithDefaults() *AwsAccountApiResource {
	this := AwsAccountApiResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAccountApiResource) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAccountApiResource) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *AwsAccountApiResource) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *AwsAccountApiResource) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *AwsAccountApiResource) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *AwsAccountApiResource) UnsetId() {
	o.Id.Unset()
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAccountApiResource) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAccountApiResource) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *AwsAccountApiResource) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *AwsAccountApiResource) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *AwsAccountApiResource) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *AwsAccountApiResource) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetRoleEmail returns the RoleEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAccountApiResource) GetRoleEmail() string {
	if o == nil || IsNil(o.RoleEmail.Get()) {
		var ret string
		return ret
	}
	return *o.RoleEmail.Get()
}

// GetRoleEmailOk returns a tuple with the RoleEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAccountApiResource) GetRoleEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleEmail.Get(), o.RoleEmail.IsSet()
}

// HasRoleEmail returns a boolean if a field has been set.
func (o *AwsAccountApiResource) HasRoleEmail() bool {
	if o != nil && o.RoleEmail.IsSet() {
		return true
	}

	return false
}

// SetRoleEmail gets a reference to the given NullableString and assigns it to the RoleEmail field.
func (o *AwsAccountApiResource) SetRoleEmail(v string) {
	o.RoleEmail.Set(&v)
}
// SetRoleEmailNil sets the value for RoleEmail to be an explicit nil
func (o *AwsAccountApiResource) SetRoleEmailNil() {
	o.RoleEmail.Set(nil)
}

// UnsetRoleEmail ensures that no value is present for RoleEmail, not even an explicit nil
func (o *AwsAccountApiResource) UnsetRoleEmail() {
	o.RoleEmail.Unset()
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAccountApiResource) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAccountApiResource) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *AwsAccountApiResource) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *AwsAccountApiResource) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *AwsAccountApiResource) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *AwsAccountApiResource) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAccountApiResource) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAccountApiResource) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *AwsAccountApiResource) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *AwsAccountApiResource) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *AwsAccountApiResource) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *AwsAccountApiResource) UnsetStatus() {
	o.Status.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AwsAccountApiResource) GetLinks() AwsAccountLinks {
	if o == nil || IsNil(o.Links) {
		var ret AwsAccountLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAccountApiResource) GetLinksOk() (*AwsAccountLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AwsAccountApiResource) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AwsAccountLinks and assigns it to the Links field.
func (o *AwsAccountApiResource) SetLinks(v AwsAccountLinks) {
	o.Links = &v
}

func (o AwsAccountApiResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsAccountApiResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.RoleEmail.IsSet() {
		toSerialize["roleEmail"] = o.RoleEmail.Get()
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableAwsAccountApiResource struct {
	value *AwsAccountApiResource
	isSet bool
}

func (v NullableAwsAccountApiResource) Get() *AwsAccountApiResource {
	return v.value
}

func (v *NullableAwsAccountApiResource) Set(val *AwsAccountApiResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAccountApiResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAccountApiResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAccountApiResource(val *AwsAccountApiResource) *NullableAwsAccountApiResource {
	return &NullableAwsAccountApiResource{value: val, isSet: true}
}

func (v NullableAwsAccountApiResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAccountApiResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


