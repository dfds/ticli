/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NewMessageContractRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewMessageContractRequest{}

// NewMessageContractRequest struct for NewMessageContractRequest
type NewMessageContractRequest struct {
	MessageType string `json:"messageType"`
	Description string `json:"description"`
	Example string `json:"example"`
	Schema string `json:"schema"`
}

type _NewMessageContractRequest NewMessageContractRequest

// NewNewMessageContractRequest instantiates a new NewMessageContractRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewMessageContractRequest(messageType string, description string, example string, schema string) *NewMessageContractRequest {
	this := NewMessageContractRequest{}
	this.MessageType = messageType
	this.Description = description
	this.Example = example
	this.Schema = schema
	return &this
}

// NewNewMessageContractRequestWithDefaults instantiates a new NewMessageContractRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewMessageContractRequestWithDefaults() *NewMessageContractRequest {
	this := NewMessageContractRequest{}
	return &this
}

// GetMessageType returns the MessageType field value
func (o *NewMessageContractRequest) GetMessageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value
// and a boolean to check if the value has been set.
func (o *NewMessageContractRequest) GetMessageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageType, true
}

// SetMessageType sets field value
func (o *NewMessageContractRequest) SetMessageType(v string) {
	o.MessageType = v
}

// GetDescription returns the Description field value
func (o *NewMessageContractRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *NewMessageContractRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *NewMessageContractRequest) SetDescription(v string) {
	o.Description = v
}

// GetExample returns the Example field value
func (o *NewMessageContractRequest) GetExample() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Example
}

// GetExampleOk returns a tuple with the Example field value
// and a boolean to check if the value has been set.
func (o *NewMessageContractRequest) GetExampleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Example, true
}

// SetExample sets field value
func (o *NewMessageContractRequest) SetExample(v string) {
	o.Example = v
}

// GetSchema returns the Schema field value
func (o *NewMessageContractRequest) GetSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value
// and a boolean to check if the value has been set.
func (o *NewMessageContractRequest) GetSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schema, true
}

// SetSchema sets field value
func (o *NewMessageContractRequest) SetSchema(v string) {
	o.Schema = v
}

func (o NewMessageContractRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewMessageContractRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messageType"] = o.MessageType
	toSerialize["description"] = o.Description
	toSerialize["example"] = o.Example
	toSerialize["schema"] = o.Schema
	return toSerialize, nil
}

func (o *NewMessageContractRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messageType",
		"description",
		"example",
		"schema",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNewMessageContractRequest := _NewMessageContractRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNewMessageContractRequest)

	if err != nil {
		return err
	}

	*o = NewMessageContractRequest(varNewMessageContractRequest)

	return err
}

type NullableNewMessageContractRequest struct {
	value *NewMessageContractRequest
	isSet bool
}

func (v NullableNewMessageContractRequest) Get() *NewMessageContractRequest {
	return v.value
}

func (v *NullableNewMessageContractRequest) Set(val *NewMessageContractRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewMessageContractRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewMessageContractRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewMessageContractRequest(val *NewMessageContractRequest) *NullableNewMessageContractRequest {
	return &NullableNewMessageContractRequest{value: val, isSet: true}
}

func (v NullableNewMessageContractRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewMessageContractRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


