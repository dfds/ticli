/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KafkaTopicApiResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KafkaTopicApiResource{}

// KafkaTopicApiResource struct for KafkaTopicApiResource
type KafkaTopicApiResource struct {
	Id NullableString `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	CapabilityId NullableString `json:"capabilityId,omitempty"`
	KafkaClusterId NullableString `json:"kafkaClusterId,omitempty"`
	Partitions *int32 `json:"partitions,omitempty"`
	Retention NullableString `json:"retention,omitempty"`
	Status NullableString `json:"status,omitempty"`
	Links *KafkaTopicLinks `json:"_links,omitempty"`
}

// NewKafkaTopicApiResource instantiates a new KafkaTopicApiResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKafkaTopicApiResource() *KafkaTopicApiResource {
	this := KafkaTopicApiResource{}
	return &this
}

// NewKafkaTopicApiResourceWithDefaults instantiates a new KafkaTopicApiResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKafkaTopicApiResourceWithDefaults() *KafkaTopicApiResource {
	this := KafkaTopicApiResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicApiResource) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicApiResource) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *KafkaTopicApiResource) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *KafkaTopicApiResource) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *KafkaTopicApiResource) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicApiResource) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicApiResource) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *KafkaTopicApiResource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *KafkaTopicApiResource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *KafkaTopicApiResource) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicApiResource) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicApiResource) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *KafkaTopicApiResource) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *KafkaTopicApiResource) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *KafkaTopicApiResource) UnsetDescription() {
	o.Description.Unset()
}

// GetCapabilityId returns the CapabilityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicApiResource) GetCapabilityId() string {
	if o == nil || IsNil(o.CapabilityId.Get()) {
		var ret string
		return ret
	}
	return *o.CapabilityId.Get()
}

// GetCapabilityIdOk returns a tuple with the CapabilityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicApiResource) GetCapabilityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CapabilityId.Get(), o.CapabilityId.IsSet()
}

// HasCapabilityId returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasCapabilityId() bool {
	if o != nil && o.CapabilityId.IsSet() {
		return true
	}

	return false
}

// SetCapabilityId gets a reference to the given NullableString and assigns it to the CapabilityId field.
func (o *KafkaTopicApiResource) SetCapabilityId(v string) {
	o.CapabilityId.Set(&v)
}
// SetCapabilityIdNil sets the value for CapabilityId to be an explicit nil
func (o *KafkaTopicApiResource) SetCapabilityIdNil() {
	o.CapabilityId.Set(nil)
}

// UnsetCapabilityId ensures that no value is present for CapabilityId, not even an explicit nil
func (o *KafkaTopicApiResource) UnsetCapabilityId() {
	o.CapabilityId.Unset()
}

// GetKafkaClusterId returns the KafkaClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicApiResource) GetKafkaClusterId() string {
	if o == nil || IsNil(o.KafkaClusterId.Get()) {
		var ret string
		return ret
	}
	return *o.KafkaClusterId.Get()
}

// GetKafkaClusterIdOk returns a tuple with the KafkaClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicApiResource) GetKafkaClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KafkaClusterId.Get(), o.KafkaClusterId.IsSet()
}

// HasKafkaClusterId returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasKafkaClusterId() bool {
	if o != nil && o.KafkaClusterId.IsSet() {
		return true
	}

	return false
}

// SetKafkaClusterId gets a reference to the given NullableString and assigns it to the KafkaClusterId field.
func (o *KafkaTopicApiResource) SetKafkaClusterId(v string) {
	o.KafkaClusterId.Set(&v)
}
// SetKafkaClusterIdNil sets the value for KafkaClusterId to be an explicit nil
func (o *KafkaTopicApiResource) SetKafkaClusterIdNil() {
	o.KafkaClusterId.Set(nil)
}

// UnsetKafkaClusterId ensures that no value is present for KafkaClusterId, not even an explicit nil
func (o *KafkaTopicApiResource) UnsetKafkaClusterId() {
	o.KafkaClusterId.Unset()
}

// GetPartitions returns the Partitions field value if set, zero value otherwise.
func (o *KafkaTopicApiResource) GetPartitions() int32 {
	if o == nil || IsNil(o.Partitions) {
		var ret int32
		return ret
	}
	return *o.Partitions
}

// GetPartitionsOk returns a tuple with the Partitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicApiResource) GetPartitionsOk() (*int32, bool) {
	if o == nil || IsNil(o.Partitions) {
		return nil, false
	}
	return o.Partitions, true
}

// HasPartitions returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasPartitions() bool {
	if o != nil && !IsNil(o.Partitions) {
		return true
	}

	return false
}

// SetPartitions gets a reference to the given int32 and assigns it to the Partitions field.
func (o *KafkaTopicApiResource) SetPartitions(v int32) {
	o.Partitions = &v
}

// GetRetention returns the Retention field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicApiResource) GetRetention() string {
	if o == nil || IsNil(o.Retention.Get()) {
		var ret string
		return ret
	}
	return *o.Retention.Get()
}

// GetRetentionOk returns a tuple with the Retention field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicApiResource) GetRetentionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Retention.Get(), o.Retention.IsSet()
}

// HasRetention returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasRetention() bool {
	if o != nil && o.Retention.IsSet() {
		return true
	}

	return false
}

// SetRetention gets a reference to the given NullableString and assigns it to the Retention field.
func (o *KafkaTopicApiResource) SetRetention(v string) {
	o.Retention.Set(&v)
}
// SetRetentionNil sets the value for Retention to be an explicit nil
func (o *KafkaTopicApiResource) SetRetentionNil() {
	o.Retention.Set(nil)
}

// UnsetRetention ensures that no value is present for Retention, not even an explicit nil
func (o *KafkaTopicApiResource) UnsetRetention() {
	o.Retention.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicApiResource) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicApiResource) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *KafkaTopicApiResource) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *KafkaTopicApiResource) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *KafkaTopicApiResource) UnsetStatus() {
	o.Status.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *KafkaTopicApiResource) GetLinks() KafkaTopicLinks {
	if o == nil || IsNil(o.Links) {
		var ret KafkaTopicLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicApiResource) GetLinksOk() (*KafkaTopicLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *KafkaTopicApiResource) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given KafkaTopicLinks and assigns it to the Links field.
func (o *KafkaTopicApiResource) SetLinks(v KafkaTopicLinks) {
	o.Links = &v
}

func (o KafkaTopicApiResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KafkaTopicApiResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.CapabilityId.IsSet() {
		toSerialize["capabilityId"] = o.CapabilityId.Get()
	}
	if o.KafkaClusterId.IsSet() {
		toSerialize["kafkaClusterId"] = o.KafkaClusterId.Get()
	}
	if !IsNil(o.Partitions) {
		toSerialize["partitions"] = o.Partitions
	}
	if o.Retention.IsSet() {
		toSerialize["retention"] = o.Retention.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableKafkaTopicApiResource struct {
	value *KafkaTopicApiResource
	isSet bool
}

func (v NullableKafkaTopicApiResource) Get() *KafkaTopicApiResource {
	return v.value
}

func (v *NullableKafkaTopicApiResource) Set(val *KafkaTopicApiResource) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaTopicApiResource) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaTopicApiResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaTopicApiResource(val *KafkaTopicApiResource) *NullableKafkaTopicApiResource {
	return &NullableKafkaTopicApiResource{value: val, isSet: true}
}

func (v NullableKafkaTopicApiResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaTopicApiResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


