/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KafkaTopicLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KafkaTopicLinks{}

// KafkaTopicLinks struct for KafkaTopicLinks
type KafkaTopicLinks struct {
	Self *ResourceLink `json:"self,omitempty"`
	MessageContracts *ResourceLink `json:"messageContracts,omitempty"`
	Consumers *ResourceLink `json:"consumers,omitempty"`
	UpdateDescription *ResourceActionLink `json:"updateDescription,omitempty"`
}

// NewKafkaTopicLinks instantiates a new KafkaTopicLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKafkaTopicLinks() *KafkaTopicLinks {
	this := KafkaTopicLinks{}
	return &this
}

// NewKafkaTopicLinksWithDefaults instantiates a new KafkaTopicLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKafkaTopicLinksWithDefaults() *KafkaTopicLinks {
	this := KafkaTopicLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *KafkaTopicLinks) GetSelf() ResourceLink {
	if o == nil || IsNil(o.Self) {
		var ret ResourceLink
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicLinks) GetSelfOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *KafkaTopicLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ResourceLink and assigns it to the Self field.
func (o *KafkaTopicLinks) SetSelf(v ResourceLink) {
	o.Self = &v
}

// GetMessageContracts returns the MessageContracts field value if set, zero value otherwise.
func (o *KafkaTopicLinks) GetMessageContracts() ResourceLink {
	if o == nil || IsNil(o.MessageContracts) {
		var ret ResourceLink
		return ret
	}
	return *o.MessageContracts
}

// GetMessageContractsOk returns a tuple with the MessageContracts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicLinks) GetMessageContractsOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.MessageContracts) {
		return nil, false
	}
	return o.MessageContracts, true
}

// HasMessageContracts returns a boolean if a field has been set.
func (o *KafkaTopicLinks) HasMessageContracts() bool {
	if o != nil && !IsNil(o.MessageContracts) {
		return true
	}

	return false
}

// SetMessageContracts gets a reference to the given ResourceLink and assigns it to the MessageContracts field.
func (o *KafkaTopicLinks) SetMessageContracts(v ResourceLink) {
	o.MessageContracts = &v
}

// GetConsumers returns the Consumers field value if set, zero value otherwise.
func (o *KafkaTopicLinks) GetConsumers() ResourceLink {
	if o == nil || IsNil(o.Consumers) {
		var ret ResourceLink
		return ret
	}
	return *o.Consumers
}

// GetConsumersOk returns a tuple with the Consumers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicLinks) GetConsumersOk() (*ResourceLink, bool) {
	if o == nil || IsNil(o.Consumers) {
		return nil, false
	}
	return o.Consumers, true
}

// HasConsumers returns a boolean if a field has been set.
func (o *KafkaTopicLinks) HasConsumers() bool {
	if o != nil && !IsNil(o.Consumers) {
		return true
	}

	return false
}

// SetConsumers gets a reference to the given ResourceLink and assigns it to the Consumers field.
func (o *KafkaTopicLinks) SetConsumers(v ResourceLink) {
	o.Consumers = &v
}

// GetUpdateDescription returns the UpdateDescription field value if set, zero value otherwise.
func (o *KafkaTopicLinks) GetUpdateDescription() ResourceActionLink {
	if o == nil || IsNil(o.UpdateDescription) {
		var ret ResourceActionLink
		return ret
	}
	return *o.UpdateDescription
}

// GetUpdateDescriptionOk returns a tuple with the UpdateDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicLinks) GetUpdateDescriptionOk() (*ResourceActionLink, bool) {
	if o == nil || IsNil(o.UpdateDescription) {
		return nil, false
	}
	return o.UpdateDescription, true
}

// HasUpdateDescription returns a boolean if a field has been set.
func (o *KafkaTopicLinks) HasUpdateDescription() bool {
	if o != nil && !IsNil(o.UpdateDescription) {
		return true
	}

	return false
}

// SetUpdateDescription gets a reference to the given ResourceActionLink and assigns it to the UpdateDescription field.
func (o *KafkaTopicLinks) SetUpdateDescription(v ResourceActionLink) {
	o.UpdateDescription = &v
}

func (o KafkaTopicLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KafkaTopicLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.MessageContracts) {
		toSerialize["messageContracts"] = o.MessageContracts
	}
	if !IsNil(o.Consumers) {
		toSerialize["consumers"] = o.Consumers
	}
	if !IsNil(o.UpdateDescription) {
		toSerialize["updateDescription"] = o.UpdateDescription
	}
	return toSerialize, nil
}

type NullableKafkaTopicLinks struct {
	value *KafkaTopicLinks
	isSet bool
}

func (v NullableKafkaTopicLinks) Get() *KafkaTopicLinks {
	return v.value
}

func (v *NullableKafkaTopicLinks) Set(val *KafkaTopicLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaTopicLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaTopicLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaTopicLinks(val *KafkaTopicLinks) *NullableKafkaTopicLinks {
	return &NullableKafkaTopicLinks{value: val, isSet: true}
}

func (v NullableKafkaTopicLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaTopicLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


