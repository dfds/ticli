/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KafkaTopicListApiResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KafkaTopicListApiResource{}

// KafkaTopicListApiResource struct for KafkaTopicListApiResource
type KafkaTopicListApiResource struct {
	Items []KafkaTopicApiResource `json:"items,omitempty"`
	Embedded *KafkaTopicListEmbeddedResources `json:"_embedded,omitempty"`
	Links *KafkaTopicListLinks `json:"_links,omitempty"`
}

// NewKafkaTopicListApiResource instantiates a new KafkaTopicListApiResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKafkaTopicListApiResource() *KafkaTopicListApiResource {
	this := KafkaTopicListApiResource{}
	return &this
}

// NewKafkaTopicListApiResourceWithDefaults instantiates a new KafkaTopicListApiResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKafkaTopicListApiResourceWithDefaults() *KafkaTopicListApiResource {
	this := KafkaTopicListApiResource{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KafkaTopicListApiResource) GetItems() []KafkaTopicApiResource {
	if o == nil {
		var ret []KafkaTopicApiResource
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KafkaTopicListApiResource) GetItemsOk() ([]KafkaTopicApiResource, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *KafkaTopicListApiResource) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []KafkaTopicApiResource and assigns it to the Items field.
func (o *KafkaTopicListApiResource) SetItems(v []KafkaTopicApiResource) {
	o.Items = v
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *KafkaTopicListApiResource) GetEmbedded() KafkaTopicListEmbeddedResources {
	if o == nil || IsNil(o.Embedded) {
		var ret KafkaTopicListEmbeddedResources
		return ret
	}
	return *o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicListApiResource) GetEmbeddedOk() (*KafkaTopicListEmbeddedResources, bool) {
	if o == nil || IsNil(o.Embedded) {
		return nil, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *KafkaTopicListApiResource) HasEmbedded() bool {
	if o != nil && !IsNil(o.Embedded) {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given KafkaTopicListEmbeddedResources and assigns it to the Embedded field.
func (o *KafkaTopicListApiResource) SetEmbedded(v KafkaTopicListEmbeddedResources) {
	o.Embedded = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *KafkaTopicListApiResource) GetLinks() KafkaTopicListLinks {
	if o == nil || IsNil(o.Links) {
		var ret KafkaTopicListLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaTopicListApiResource) GetLinksOk() (*KafkaTopicListLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *KafkaTopicListApiResource) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given KafkaTopicListLinks and assigns it to the Links field.
func (o *KafkaTopicListApiResource) SetLinks(v KafkaTopicListLinks) {
	o.Links = &v
}

func (o KafkaTopicListApiResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KafkaTopicListApiResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Embedded) {
		toSerialize["_embedded"] = o.Embedded
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableKafkaTopicListApiResource struct {
	value *KafkaTopicListApiResource
	isSet bool
}

func (v NullableKafkaTopicListApiResource) Get() *KafkaTopicListApiResource {
	return v.value
}

func (v *NullableKafkaTopicListApiResource) Set(val *KafkaTopicListApiResource) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaTopicListApiResource) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaTopicListApiResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaTopicListApiResource(val *KafkaTopicListApiResource) *NullableKafkaTopicListApiResource {
	return &NullableKafkaTopicListApiResource{value: val, isSet: true}
}

func (v NullableKafkaTopicListApiResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaTopicListApiResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


