/*
SelfService API

SelfService API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MembershipApplicationApiResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipApplicationApiResource{}

// MembershipApplicationApiResource struct for MembershipApplicationApiResource
type MembershipApplicationApiResource struct {
	Id NullableString `json:"id,omitempty"`
	Applicant NullableString `json:"applicant,omitempty"`
	SubmittedAt NullableString `json:"submittedAt,omitempty"`
	ExpiresOn NullableString `json:"expiresOn,omitempty"`
	Approvals *MembershipApprovalListApiResource `json:"approvals,omitempty"`
	Links *MembershipApplicationLinks `json:"_links,omitempty"`
}

// NewMembershipApplicationApiResource instantiates a new MembershipApplicationApiResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipApplicationApiResource() *MembershipApplicationApiResource {
	this := MembershipApplicationApiResource{}
	return &this
}

// NewMembershipApplicationApiResourceWithDefaults instantiates a new MembershipApplicationApiResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipApplicationApiResourceWithDefaults() *MembershipApplicationApiResource {
	this := MembershipApplicationApiResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MembershipApplicationApiResource) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MembershipApplicationApiResource) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *MembershipApplicationApiResource) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *MembershipApplicationApiResource) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *MembershipApplicationApiResource) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *MembershipApplicationApiResource) UnsetId() {
	o.Id.Unset()
}

// GetApplicant returns the Applicant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MembershipApplicationApiResource) GetApplicant() string {
	if o == nil || IsNil(o.Applicant.Get()) {
		var ret string
		return ret
	}
	return *o.Applicant.Get()
}

// GetApplicantOk returns a tuple with the Applicant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MembershipApplicationApiResource) GetApplicantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Applicant.Get(), o.Applicant.IsSet()
}

// HasApplicant returns a boolean if a field has been set.
func (o *MembershipApplicationApiResource) HasApplicant() bool {
	if o != nil && o.Applicant.IsSet() {
		return true
	}

	return false
}

// SetApplicant gets a reference to the given NullableString and assigns it to the Applicant field.
func (o *MembershipApplicationApiResource) SetApplicant(v string) {
	o.Applicant.Set(&v)
}
// SetApplicantNil sets the value for Applicant to be an explicit nil
func (o *MembershipApplicationApiResource) SetApplicantNil() {
	o.Applicant.Set(nil)
}

// UnsetApplicant ensures that no value is present for Applicant, not even an explicit nil
func (o *MembershipApplicationApiResource) UnsetApplicant() {
	o.Applicant.Unset()
}

// GetSubmittedAt returns the SubmittedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MembershipApplicationApiResource) GetSubmittedAt() string {
	if o == nil || IsNil(o.SubmittedAt.Get()) {
		var ret string
		return ret
	}
	return *o.SubmittedAt.Get()
}

// GetSubmittedAtOk returns a tuple with the SubmittedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MembershipApplicationApiResource) GetSubmittedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubmittedAt.Get(), o.SubmittedAt.IsSet()
}

// HasSubmittedAt returns a boolean if a field has been set.
func (o *MembershipApplicationApiResource) HasSubmittedAt() bool {
	if o != nil && o.SubmittedAt.IsSet() {
		return true
	}

	return false
}

// SetSubmittedAt gets a reference to the given NullableString and assigns it to the SubmittedAt field.
func (o *MembershipApplicationApiResource) SetSubmittedAt(v string) {
	o.SubmittedAt.Set(&v)
}
// SetSubmittedAtNil sets the value for SubmittedAt to be an explicit nil
func (o *MembershipApplicationApiResource) SetSubmittedAtNil() {
	o.SubmittedAt.Set(nil)
}

// UnsetSubmittedAt ensures that no value is present for SubmittedAt, not even an explicit nil
func (o *MembershipApplicationApiResource) UnsetSubmittedAt() {
	o.SubmittedAt.Unset()
}

// GetExpiresOn returns the ExpiresOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MembershipApplicationApiResource) GetExpiresOn() string {
	if o == nil || IsNil(o.ExpiresOn.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiresOn.Get()
}

// GetExpiresOnOk returns a tuple with the ExpiresOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MembershipApplicationApiResource) GetExpiresOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresOn.Get(), o.ExpiresOn.IsSet()
}

// HasExpiresOn returns a boolean if a field has been set.
func (o *MembershipApplicationApiResource) HasExpiresOn() bool {
	if o != nil && o.ExpiresOn.IsSet() {
		return true
	}

	return false
}

// SetExpiresOn gets a reference to the given NullableString and assigns it to the ExpiresOn field.
func (o *MembershipApplicationApiResource) SetExpiresOn(v string) {
	o.ExpiresOn.Set(&v)
}
// SetExpiresOnNil sets the value for ExpiresOn to be an explicit nil
func (o *MembershipApplicationApiResource) SetExpiresOnNil() {
	o.ExpiresOn.Set(nil)
}

// UnsetExpiresOn ensures that no value is present for ExpiresOn, not even an explicit nil
func (o *MembershipApplicationApiResource) UnsetExpiresOn() {
	o.ExpiresOn.Unset()
}

// GetApprovals returns the Approvals field value if set, zero value otherwise.
func (o *MembershipApplicationApiResource) GetApprovals() MembershipApprovalListApiResource {
	if o == nil || IsNil(o.Approvals) {
		var ret MembershipApprovalListApiResource
		return ret
	}
	return *o.Approvals
}

// GetApprovalsOk returns a tuple with the Approvals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipApplicationApiResource) GetApprovalsOk() (*MembershipApprovalListApiResource, bool) {
	if o == nil || IsNil(o.Approvals) {
		return nil, false
	}
	return o.Approvals, true
}

// HasApprovals returns a boolean if a field has been set.
func (o *MembershipApplicationApiResource) HasApprovals() bool {
	if o != nil && !IsNil(o.Approvals) {
		return true
	}

	return false
}

// SetApprovals gets a reference to the given MembershipApprovalListApiResource and assigns it to the Approvals field.
func (o *MembershipApplicationApiResource) SetApprovals(v MembershipApprovalListApiResource) {
	o.Approvals = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MembershipApplicationApiResource) GetLinks() MembershipApplicationLinks {
	if o == nil || IsNil(o.Links) {
		var ret MembershipApplicationLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipApplicationApiResource) GetLinksOk() (*MembershipApplicationLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MembershipApplicationApiResource) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given MembershipApplicationLinks and assigns it to the Links field.
func (o *MembershipApplicationApiResource) SetLinks(v MembershipApplicationLinks) {
	o.Links = &v
}

func (o MembershipApplicationApiResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipApplicationApiResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Applicant.IsSet() {
		toSerialize["applicant"] = o.Applicant.Get()
	}
	if o.SubmittedAt.IsSet() {
		toSerialize["submittedAt"] = o.SubmittedAt.Get()
	}
	if o.ExpiresOn.IsSet() {
		toSerialize["expiresOn"] = o.ExpiresOn.Get()
	}
	if !IsNil(o.Approvals) {
		toSerialize["approvals"] = o.Approvals
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableMembershipApplicationApiResource struct {
	value *MembershipApplicationApiResource
	isSet bool
}

func (v NullableMembershipApplicationApiResource) Get() *MembershipApplicationApiResource {
	return v.value
}

func (v *NullableMembershipApplicationApiResource) Set(val *MembershipApplicationApiResource) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipApplicationApiResource) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipApplicationApiResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipApplicationApiResource(val *MembershipApplicationApiResource) *NullableMembershipApplicationApiResource {
	return &NullableMembershipApplicationApiResource{value: val, isSet: true}
}

func (v NullableMembershipApplicationApiResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipApplicationApiResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


